{
  "hash": "560dca8a740559d52bee65bd4eef7300",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Lab 5\"\nsubtitle: Due Thursday March 6 at 11:59 PM\n---\n\n\n# Part 1: transformations\n\nLet $X$ be a random variable, and let $g$ be some function. Because $X$ is random, the new variable $Y=g(X)$ is also random. Given what we know about $X$, what is the distribution of $Y$? This simple question will preoccupy us for the next seventy-five minutes.\n\n## Problem -1: recall lecture\n\nIf $\\Theta\\sim\\text{Unif}(-\\pi/2,\\,\\pi/2)$, then what is the distribution of $X=\\tan\\Theta$? We know that $\\text{Range}(X)=\\mathbb{R}$, so for any $x\\in\\mathbb{R}$, we have \n\n$$\n\\begin{aligned}\nF_X(x)\n&=\nP(X\\leq x)\n\\\\\n&=\nP(\\tan\\Theta\\leq x)\n\\\\\n&=\nP(\\Theta\\leq \\tan^{-1}x)\n\\\\\n&=\nF_{\\Theta}(\\tan^{-1}x)\n\\\\\n&=\n\\frac{\\tan^{-1}x}{\\pi}+\\frac{1}{2}.\n\\end{aligned}\n$$\n\nSo the density of $X$ is\n\n$$\nf_X(x)=\\frac{\\text{d}}{\\text{d}x}F_X(x)=\\frac{\\text{d}}{\\text{d}x}\\left[\\frac{\\tan^{-1}x}{\\pi}+\\frac{1}{2}\\right]=\\frac{1}{\\pi(1+x^2)},\\quad x\\in\\mathbb{R}.\n$$\n\nThis is the density of the **Cauchy distribution**.\n\n## Problem 0: watch Gwen!\n\nIf $X\\sim\\text{N}(0,\\, 1)$, then what is the pdf of $Y=Z^2$? Turns out it's a member of the gamma family.\n\n## Problem 1: now you try\n\nConsider $X\\sim \\text{Gamma}(1,\\,1)$. Its density is \n\n$$\nf_X(x)=e^{-x},\\quad x>0.\n$$\n\na. What is the cdf of $X$?\nb. What are the range and pdf of $Y=\\ln X$?\nc. Simulate `n=5000` draws of $Y$. Plot a histogram, and add a line plot of the density you derived in part b. They should match!\n\n## Problem 2: location-scale transformations\n\nLet $X$ be an absolutely continuous random variable with pdf $f_X$, let $a>0$ and $b\\in\\mathbb{R}$ be constants, and consider the new random variable $Y=aX+b$. \n\na. What is $E(Y)$?\nb. What is $\\text{var}(Y)$?\nc. What is the density of $Y$?\nd. In the special case where $X\\sim\\text{N}(0,\\,1)$, what are $E(Y)$, $\\text{var}(Y)$, and the density of $Y$?\n\n# Part 2: simulation\n\nWhen you call the `r-` functions and get random numbers from some distribution, what is the computer doing under the hood? Ultimately, it's simulating simpler stuff and then applying a transformation to give you the distribution that you want. For example...\n\n- Want Cauchy? Simulate $\\text{Unif}(-\\pi/2,\\,\\pi/2)$ and apply tan;\n- Want Gamma(1/2, 1/2)? Simulate N(0, 1) and square;\n- Want $\\text{N}(\\mu,\\,\\sigma^2)$? Simulate N(0, 1) and then scale and shift.\n\nOkay, but where is the simple stuff coming from? It turns out that you can boil everything down to the standard uniform distribution $\\text{Unif}(0,\\, 1)$.\n\n::: callout-note\n## Theorem: inverse transform sampling\n\nLet $U\\sim \\text{Unif}(0,\\, 1)$, and let $F$ be any cdf (non-decreasing, right-continuous, yada yada) you're interested in. If you define a new random variable $X=F^{-1}(U)$, then $X\\sim F$.\n:::\n\nIn words, this theorem is saying that you can simulate *any* distribution by simulating the standard uniform distribution and then applying a transformation. We statisticians take for granted that the computer scientists figured out how to simulate $\\text{Unif}(0,\\, 1)$ ([here](https://en.wikipedia.org/wiki/Mersenne_Twister) is an example), and so if we want random numbers from some fancy distribution, we just need to figure out what the transformation is.\n\n## Problem 3\n\nIf you took AP Statistics or STA 101, you probably learned about Student's $t$ distribution. This is a family of continuous distributions with heavier tails than the normal, and the density is:\n\n$$\nf_X(x;\\,\\nu)=\\frac{\\Gamma\\left(\\frac{\\nu+1}{2}\\right)}{\\Gamma\\left(\\frac{\\nu}{2}\\right)\\sqrt{\\pi\\nu}}\\left(1+\\frac{1}{\\nu}x^2\\right)^{-\\frac{\\nu+1}{2}},\\quad x\\in\\mathbb{R}.\n$$\n\nThis family has one parameter $\\nu>0$ called the *degrees of freedom*. Okay, that's a big rotten mess, but whatever. If we wanted to simulate it, all we have to do is simulate from $\\text{Unif}(0,\\, 1)$, and then plug those numbers into the inverse cdf of the $t$ distribution. The transformed numbers are guaranteed to follow the $t$ distribution. Let's see that!\n\nStudent's $t$ has it's own `d-` and `q-` functions:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndt(x, df)\nqt(p, df)\n```\n:::\n\n\n`dt` evaluates the pdf, and `qt` evaluates the *inverse* cdf (the so-called **quantile function**). Implement the following:\n\n- Simulate $n=5000$ numbers from $\\text{Unif}(0,\\, 1)$;\n- Plug them into the inverse cdf of the $t$ distribution with `df = 10`;\n- Plot a histogram of these transformed numbers;\n- Add on top of the histogram a line plot of the density of the $t$ distribution;\n- They had better match!\n\n## Problem 4\n\nLet $X\\sim\\text{Gamma}(1,\\,\\beta)$. So the pdf of $X$ is \n\n$$\nf_X(x)=\\beta e^{-\\beta x},\\quad x>0.\n$$\n\na. Find the cdf $F_X(x)=P(X\\leq x)$;\nb. Find the inverse cdf $F_X^{-1}(y)$, $y\\in(0,\\,1)$;\nc. Implement inverse transform sampling to simulate $\\text{Gamma}(1,\\,\\beta)$ for $\\beta = 2$.\nd. Plot a histogram of 5000 draws from your sampler, and add a line plot of the $\\text{Gamma}(1,\\,\\beta)$ density on top. They had better match!\n\n## Problem 5\n\nThe bottom line of all of this is the **universality of the uniform**. The fundamental principle of simulation is that any distribution can be simulated by first simulating from the standard uniform, and then applying a transformation. \n\nThe **Box-Muller** method says that we can simulate the standard normal in the following way:\n\n$$\n\\begin{align*}\nU_1,\\,U_2&\\overset{\\textrm{iid}}{\\sim}\\textrm{Unif}(0,\\,1)\\\\\nZ&=\\sqrt{-2\\ln U_1}\\cos(2\\pi U_2)\n\\end{align*}\n$$\n\nSo $Z\\sim\\text{N}(0,\\,1)$. It is not hard to prove this if you've taken multivariable calculus (yaaay polar coordinates), but our course does not assume this. Nevertheless, we can still implement the sampler and check that it works.\n\na. Use the Box-Muller method to simulate 5000 random numbers from N(0, 1). Check that you did it right by plotting the histogram and superimposing the standard normal density;\nb. Modify your code to simulate $\\text{N}(\\mu=-3.5,\\,\\sigma^2=0.58)$.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}